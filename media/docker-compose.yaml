version: "2.1"
services:
  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=2000
      - PGID=2000
      - TZ=Europe/London
      - UMASK_SET=022 #optional
    networks:
      - traefik-proxy
      - nzbget
    volumes:
      - sonarr-config:/config
      - /mnt/zstorage/media/television:/mnt/media/television
      - downloads:/downloads
    restart: unless-stopped
    depends_on:
      - nzbget
    labels:
      - "sui.enabled=true"
      - "sui.icon=television-classic"
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.entrypoints=http"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.p.lan.starstreak.net`)"
      - "traefik.http.routers.sonarr.middlewares=sonarr-https-redirect"
      - "traefik.http.middlewares.sonarr-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.sonarr-secure.entrypoints=https"
      - "traefik.http.routers.sonarr-secure.rule=Host(`sonarr.p.lan.starstreak.net`)"
      - "traefik.http.routers.sonarr-secure.tls=true"
      - "traefik.http.routers.sonarr-secure.service=sonarr-svc"
      - "traefik.http.services.sonarr-svc.loadbalancer.server.port=8989"
      - "traefik.docker.network=traefik-proxy"

  sonarr-uhd:
    image: linuxserver/sonarr
    container_name: sonarr-uhd
    environment:
      - PUID=2000
      - PGID=2000
      - TZ=Europe/London
      - UMASK_SET=022 #optional
    networks:
      - traefik-proxy
      - nzbget
    volumes:
      - sonarr-uhd-config:/config
      - /mnt/zstorage/media/television-uhd:/mnt/media/television-uhd
      - downloads:/downloads
    restart: unless-stopped
    depends_on:
      - nzbget
    labels:
      - "sui.enabled=true"
      - "sui.icon=television-classic"
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr-uhd.entrypoints=http"
      - "traefik.http.routers.sonarr-uhd.rule=Host(`sonarr-uhd.p.lan.starstreak.net`)"
      - "traefik.http.routers.sonarr-uhd.middlewares=sonarr-uhd-https-redirect"
      - "traefik.http.middlewares.sonarr-uhd-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.sonarr-uhd-secure.entrypoints=https"
      - "traefik.http.routers.sonarr-uhd-secure.rule=Host(`sonarr-uhd.p.lan.starstreak.net`)"
      - "traefik.http.routers.sonarr-uhd-secure.tls=true"
      - "traefik.http.routers.sonarr-uhd-secure.service=sonarr-uhd-svc"
      - "traefik.http.services.sonarr-uhd-svc.loadbalancer.server.port=8989"
      - "traefik.docker.network=traefik-proxy"

  radarr:
    image: linuxserver/radarr
    container_name: radarr
    environment:
      - PUID=2000
      - PGID=2000
      - TZ=Europe/London
      - UMASK_SET=022 #optional
    networks:
      - traefik-proxy
      - nzbget
    volumes:
      - radarr-config:/config
      - /mnt/zstorage/media/movies:/mnt/media/movies
      - downloads:/downloads
    restart: unless-stopped
    depends_on:
      - nzbget
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.entrypoints=http"
      - "traefik.http.routers.radarr.rule=Host(`radarr.p.lan.starstreak.net`)"
      - "traefik.http.routers.radarr.middlewares=radarr-https-redirect"
      - "traefik.http.middlewares.radarr-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.radarr-secure.entrypoints=https"
      - "traefik.http.routers.radarr-secure.rule=Host(`radarr.p.lan.starstreak.net`)"
      - "traefik.http.routers.radarr-secure.tls=true"
      - "traefik.http.routers.radarr-secure.service=radarr-svc"
      - "traefik.http.services.radarr-svc.loadbalancer.server.port=7878"
      - "traefik.docker.network=traefik-proxy"
  
  radarr-uhd:
    image: linuxserver/radarr
    container_name: radarr-uhd
    environment:
      - PUID=2000
      - PGID=2000
      - TZ=Europe/London
      - UMASK_SET=022 #optional
    networks:
      - traefik-proxy
      - nzbget
    volumes:
      - radarr-uhd-config:/config
      - /mnt/zstorage/media/movies-uhd:/mnt/media/movies-uhd
      - downloads:/downloads
    restart: unless-stopped
    depends_on:
      - nzbget
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr-uhd.entrypoints=http"
      - "traefik.http.routers.radarr-uhd.rule=Host(`radarr-uhd.p.lan.starstreak.net`)"
      - "traefik.http.routers.radarr-uhd.middlewares=radarr-uhd-https-redirect"
      - "traefik.http.middlewares.radarr-uhd-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.radarr-uhd-secure.entrypoints=https"
      - "traefik.http.routers.radarr-uhd-secure.rule=Host(`radarr-uhd.p.lan.starstreak.net`)"
      - "traefik.http.routers.radarr-uhd-secure.tls=true"
      - "traefik.http.routers.radarr-uhd-secure.service=radarr-uhd-svc"
      - "traefik.http.services.radarr-uhd-svc.loadbalancer.server.port=7878"
      - "traefik.docker.network=traefik-proxy"

  nzbget:
    image: linuxserver/nzbget
    container_name: nzbget
    environment:
      - PUID=2000
      - PGID=2000
      - TZ=Europe/London
    networks:
      - traefik-proxy
      - nzbget
    volumes:
      - nzbget-config:/config
      - downloads:/downloads
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nzbget.entrypoints=http"
      - "traefik.http.routers.nzbget.rule=Host(`nzbget.p.lan.starstreak.net`)"
      - "traefik.http.routers.nzbget.middlewares=nzbget-https-redirect"
      - "traefik.http.middlewares.nzbget-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.nzbget-secure.entrypoints=https"
      - "traefik.http.routers.nzbget-secure.rule=Host(`nzbget.p.lan.starstreak.net`)"
      - "traefik.http.routers.nzbget-secure.tls=true"
      - "traefik.http.routers.nzbget-secure.service=nzbget-svc"
      - "traefik.http.services.nzbget-svc.loadbalancer.server.port=6789"
      - "traefik.docker.network=traefik-proxy"

networks:
  traefik-proxy:
    external: true
  nzbget:

volumes:
  radarr-config:
  radarr-uhd-config:
  sonarr-config:
  sonarr-uhd-config:
  nzbget-config:
  downloads:
    external: true
